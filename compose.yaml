services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=sample'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=postgres'
      - 'APP_DB_USER=app_user'
      - 'APP_DB_PASS=app_pass'
      - 'APP_DB_NAME=sample'
      - 'TZ=UTC'
      - 'PGTZ=UTC'
    ports:
      - '5432:5432'
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
  rabbitmq:
    image: 'rabbitmq:latest'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=myuser'
    ports:
      - '5672'
  redis:
    image: 'redis:latest'
    ports:
      - '6379'
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "8097:8097"
    healthcheck:
      test: [ "CMD", "/bin/kafka-topics", "--bootstrap-server", "localhost:8097", "--list", "||", "exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8097,INTERNAL://kafka1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "8098:8098"
    healthcheck:
      test: [ "CMD", "/bin/kafka-topics", "--bootstrap-server", "localhost:8098", "--list", "||", "exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8098,INTERNAL://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "8099:8099"
    healthcheck:
      test: [ "CMD", "/bin/kafka-topics", "--bootstrap-server", "localhost:8099", "--list", "||", "exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8099,INTERNAL://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.2-SNAPSHOT
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources